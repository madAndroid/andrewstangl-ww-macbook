apiVersion: templates.weave.works/v1alpha2
kind: GitOpsTemplate
metadata:
  name: dynamic-v1
  namespace: test-one
  labels:
    weave.works/template-type: terraform
  annotations:
    templates.weave.works/profiles-enabled: "true"
    templates.weave.works/kustomizations-enabled: "false"
    templates.weave.works/credentials-enabled: "false"
    templates.weave.works/delimiters: "((,))"
spec:
  description: Template for creating dynamic environment.
  renderType: templating
  params:
    - name: RESOURCE_NAME
      description: Name of the environment.
    - name: AWS_REGION
      description: AWS region to deploy cluster.
      default: us-east-1
    - name: DESIRED_SIZE
      description: Desired number of nodes in cluster.
      default: "2"
    - name: MIN_SIZE
      description: Min number of nodes in cluster.
      default: "1"
    - name: MAX_SIZE
      description: Max number of nodes in cluster.
      default: "3"
    - name: CAPACITY_TYPE
      description: Capacity type of nodes in cluster.
      options: ["ON_DEMAND", "SPOT"]
      default: "SPOT"
    - name: INSTANCE_TYPE
      description: Instance type of nodes in cluster.
      default: "t3.small"
    - name: SHRINK
      description: Shrink application node groups to zero.
      default: "false"
  resourcetemplates:
    - path: clusters/management/clusters/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
      content:
        # vpc creation
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-vpc-creation
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .vpcs[?(@.mode=="create")] }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: '(( .params.RESOURCE_NAME ))-vpc-(( .params.RESOURCE_NAME ))-{{ .Repeat.name }}'
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./infra/dynamic/vpc-create
                    prune: true
                    wait: true
                    timeout: 10m
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        templateNamespace: '(( .template.meta.namespace ))'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        vpcName: '{{ .Repeat.name }}'
                        region: '{{ .Element.aws.region }}'
                        publicSubnetCount: '{{ or .Repeat.publicsubnets "3" }}'
                        privateSubnetCount: '{{ or .Repeat.privatesubnets "3" }}'
                        vpcCIDR: '{{ or .Repeat.cidr  "10.0.0.0/16"}}'

        # vpc - use vpc previously created by template
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-vpc-discovery
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .vpcs[?(@.mode!="create")] }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: '(( .params.RESOURCE_NAME ))-vpc-{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}{{ .Repeat.name }}'
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./infra/dynamic/vpc-{{ .Repeat.mode }}
                    prune: true
                    wait: true
                    timeout: 10m                    
                    postBuild:
                      substitute:
                        templateNamespace: '(( .template.meta.namespace ))'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        vpcName: '{{ .Repeat.name }}'
                        vpcResource: '{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}'

        # Register cluster with WGE if desired/needed
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-gitops-clusters
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .clusters[?(@.gui)] }'
                content:
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  kind: Kustomization
                  metadata:
                    annotations:
                      templates.weave.works/create-request: ""
                    name: '(( .params.RESOURCE_NAME ))-cluster-{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.name }}-gitops-cluster'
                  spec:
                    interval: 1m0s
                    path: ./wge-resources/wge
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        clusterName: '{{ .Repeat.name }}'
                        templateNamespace: '(( .template.meta.namespace ))'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                    prune: true
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    timeout: 1m
                    
        # eks cluster creation
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-eks-cluster-creation
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .clusters[?(@.mode=="create")] }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: "(( .params.RESOURCE_NAME ))-eks-(( .params.RESOURCE_NAME ))-'{{ .Repeat.name }}'"
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    dependsOn:
                      - name: '(( .params.RESOURCE_NAME ))-vpc-{{ or .Repeat.vpc_resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.vpc_name }}'
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./infra/dynamic/eks-create
                    prune: true
                    wait: true
                    timeout: 15m
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        templateNamespace: '(( .template.meta.namespace ))'
                        vpcResource: '{{ or .Repeat.vpc_resource "(( .params.RESOURCE_NAME ))" }}'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        clusterName: '{{ .Repeat.name }}'
                        vpcName: '{{ .Repeat.vpc_name }}'
                        clusterVersion: '{{ .Repeat.version }}'

        # eks cluster discovery or use
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-eks-cluster-discovery
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .clusters[?(@.mode!="create")] }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: '(( .params.RESOURCE_NAME ))-eks-{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.name }}'
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    dependsOn:
                      - name: '(( .params.RESOURCE_NAME ))-vpc-{{ or .Repeat.vpc_resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.vpc_name }}'
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./infra/dynamic/eks-{{ .Repeat.mode }}
                    prune: true
                    wait: true
                    timeout: 15m
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        templateNamespace: '(( .template.meta.namespace ))'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        clusterName: '{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.name }}'

        # Configure eks cluster if create is true
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-eks-config
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .clusters[?(@.mode=="create")] }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: '(( .params.RESOURCE_NAME ))-eks-config-(( .params.RESOURCE_NAME ))-{{ .Repeat.name }}'
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    dependsOn:
                      - name: '(( .params.RESOURCE_NAME ))-eks-(( .params.RESOURCE_NAME ))-{{ .Repeat.name }}'
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./infra/dynamic/eks-config
                    prune: true
                    wait: true
                    timeout: 5m
                    
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        clusterName: '{{ or .Repeat.resource "(( .params.RESOURCE_NAME ))" }}-{{ .Repeat.name }}'
                        templateNamespace: '(( .template.meta.namespace ))'
                        target_path: 'clusters/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME ))/${clusterName}'
                        desired_size: "\"(( .params.DESIRED_SIZE ))\""
                        # min_size: '(( .params.MIN_SIZE ))'
                        # max_size: '(( .params.MAX_SIZE ))'
                        # capacity_type: '(( .params.CAPACITY_TYPE ))'
                        # instance_type: '(( .params.INSTANCE_TYPE ))'
                        # shrink: "(( .params.SHRINK ))"
                        eks_core_state_bucket: '${prefixName}-${awsAccountId}-${awsRegion}-tf-state'

    - path: clusters/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME ))/apps.yaml
      content:
        # Deploy apps to cluster
        - apiVersion: templates.weave.works/v1alpha1
          kind: GitOpsSet
          metadata:
            labels:
              app.kubernetes.io/name: gitopsset
              app.kubernetes.io/instance: gitopsset-sample
              app.kubernetes.io/part-of: gitopssets-controller
              app.kubernetes.io/managed-by: kustomize
              app.kubernetes.io/created-by: gitopssets-controller
            name: (( .params.RESOURCE_NAME ))-apps
            namespace: (( .template.meta.namespace ))
          spec:
            serviceAccountName: gitopssets
            generators:
              - gitRepository:
                  repositoryRef: flux-system
                  files:
                    - path: resource-descriptions/(( .template.meta.namespace ))/(( .params.RESOURCE_NAME )).yaml
            templates:
              - repeat: '{ .clusters.apps }'
                content:
                  kind: Kustomization
                  apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
                  metadata:
                    name: "(( .params.RESOURCE_NAME ))-cluster-'{{ .Element.name }}'-app-'{{ .Repeat.name }}'"
                    annotations:
                      templates.weave.works/create-request: ''
                  spec:
                    interval: 1m0s
                    sourceRef:
                      kind: GitRepository
                      name: flux-system
                      namespace: flux-system
                    path: ./cluster/apps/template
                    prune: true
                    wait: true
                    timeout: 5m
                    
                    postBuild:
                      substituteFrom:
                        - kind: ConfigMap
                          name: cluster-config
                      substitute:
                        templateNamespace: '(( .template.meta.namespace ))'
                        resourceName: '(( .params.RESOURCE_NAME ))'
                        clusterName: '{{ or .Element.resource "(( .params.RESOURCE_NAME ))" }}-{{ .Element.name }}'
                        appName: '{{ .Repeat.name }}'
                        appVersion: '{{or .Repeat.version "" }}'
                        appPath: '{{or .Repeat.path "./kustomize" }}'
                        appRefType: '{{or .Repeat.ref.type "branch" }}'
                        appRefValue: '{{or .Repeat.ref.value "main" }}'
